@function inner-radius($outerRadius, $parentPadding) {
  $radius: calc(#{$outerRadius} - #{$parentPadding});
  @return $radius;
}

@function outer-radius($innerRadius, $parentPadding) {
  $radius: calc(#{$innerRadius} + #{$parentPadding});
  @return $radius;
}

@mixin hoverable {

  &::before {
    content         : "";
    position        : absolute;
    background-image: radial-gradient(circle at center, var(--hoverable-color, hsl(var(--primary-500) / 15%)), transparent 75%);
    transform       : translate(-50%, -50%);
    width           : 100%;
    aspect-ratio    : 1/1;
    top             : var(--hover-top, 0);
    left            : var(--hover-left, 0);
    transition      : opacity 200ms;
  }

  &:not(:hover) {
    &::before {
      opacity: 0;
    }
  }
}

@mixin button {
  --button-transitions: outline 200ms, outline-offset 200ms, background-color 200ms;

  align-items            : center;
  background-color       : hsl(var(--fg-contrast) / 5%);
  border                 : none;
  border-radius          : var(--radius-2);
  color                  : hsl(var(--primary-900));
  cursor                 : pointer;
  display                : inline-flex;
  font-family            : var(--font-sans);
  font-size              : var(--type-size-6);
  font-variation-settings: 'wght'600;
  font-weight            : bold;
  gap                    : 1ch;
  justify-content        : center;
  outline                : 3px solid hsl(var(--primary-700) / 0);
  padding                : var(--space-xs) var(--space-m);
  text-align             : center;
  text-decoration        : none !important;
  text-transform         : lowercase;
  transition             : outline 200ms, outline-offset 200ms, background-color 200ms;
  width                  : max-content;

  &:hover {
    background-color: hsl(var(--primary-300) / 40%);
  }

  &:focus-visible {
    outline-color : hsl(var(--primary-700) / 1);
    outline-offset: var(--radius-1);

    &:active {
      outline-offset: 0;
      transition    : outline 200ms, outline-offset 50ms, background-color 200ms;
    }
  }
}

@mixin raised-3d($raise-level: 1, $raise-factor: 2) {
  $raiseShadow: '';

  @for $level from 1 through $raise-level {
    $raiseShadow: $raiseShadow+'0 #{$level * $raise-factor}px #{$level * $raise-factor}px var(--raised-3d-color, hsl(var(--d-contrast)/0.075))';

    @if $level < $raise-level {
      $raiseShadow: $raiseShadow + ',';
    }
  }

  $highlights: 
    inset 0 0 0 var(--r3-highlight-size, 1px) var(--r3-highlight-color, #fff3),
    inset 0 var(--r3-highlight-size, 1px) var(--r3-highlight-size, 1px) var(--r3-highlight-color, #fff3),
    0 0 0 var(--r3-etch-size, 1px) var(--raised-3d-border, #0002);

  box-shadow: unquote($string: "#{$highlights}, #{$raiseShadow}");
}